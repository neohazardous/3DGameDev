#define GLFW_INCLUDE_VULKAN
#include <GLFW\glfw3.h>
#include <vulkan\vulkan.h>

#define GLM_FORCE_RADIANS
#define GLM_FORCE_DEPTH_ZERO_TO_ONE

#include <glm\vec4.hpp>
#include <glm\mat4x4.hpp>
#include <iostream>


int _main() {

	glfwInit();
	glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
	GLFWwindow * window = glfwCreateWindow(800, 600, "Vulkan window", nullptr, nullptr); 
	//the window generated by the line above is 800x600 pixels 
	//if the window fails to open, it will return NULLPTR
	//"Vulkan window" parameter is the named used when the window is generated 
	uint32_t extensionCount = 0;
	vkEnumerateInstanceExtensionProperties(nullptr, &extensionCount, nullptr);

	std::cout << extensionCount << " extensions supported" << std::endl;
	glm::mat4 matrix;
	glm::vec4 vec;
	auto test = matrix * vec;

	while (!glfwWindowShouldClose(window)) {

		glfwPollEvents();

	}

	glfwDestroyWindow(window);
	glfwTerminate();

	return 0;

}